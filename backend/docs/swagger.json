{
    "swagger": "2.0",
    "info": {
        "description": "REST API testovoye",
        "title": "Testovoye Effective Mobile",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1/",
    "paths": {
        "/person": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Получить список Person с фильтрацией и пагинацией",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтрация по имени (partial match)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтрация по фамилии (partial match)",
                        "name": "surname",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Минимальный возраст",
                        "name": "min_age",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "Максимальный возраст",
                        "name": "max_age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Пол (male/female)",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Код страны (ISO Alpha-2)",
                        "name": "nationality",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Страница",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Размер страницы",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.PaginatedPersons"
                        }
                    },
                    "400": {
                        "description": "Неверные query-параметры",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при выборке из БД",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Обновить существующего Person",
                "parameters": [
                    {
                        "description": "Данные для обновления Person",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.updatePersonInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.simpleMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Неправильный формат входных данных или неверный UUID",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при обновлении в БД",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Создать нового Person",
                "parameters": [
                    {
                        "description": "Данные нового Person",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.newPersonInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.createPersonResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат входных данных",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/person/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Получить Person по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID идентификатор Person",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Person"
                        }
                    },
                    "400": {
                        "description": "Неверный формат UUID",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Person не найден",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Person"
                ],
                "summary": "Удалить Person по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID идентификатор Person",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.simpleMessageResponse"
                        }
                    },
                    "400": {
                        "description": "ID не указан или неверный формат",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при удалении из БД",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.PaginatedPersons": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Person"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "domain.Person": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "v1.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Описание ошибки\nexample: invalid input body",
                    "type": "string"
                }
            }
        },
        "v1.createPersonResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "UUID нового Person\nexample: 3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                }
            }
        },
        "v1.newPersonInput": {
            "type": "object",
            "required": [
                "name",
                "surname"
            ],
            "properties": {
                "name": {
                    "description": "Name имя человека\nRequired: true\nMin Length: 2\nMax Length: 100",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "patronymic": {
                    "description": "Patronymic отчество (необязательно)\nMin Length: 2\nMax Length: 100",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "surname": {
                    "description": "Surname фамилия человека\nRequired: true\nMin Length: 2\nMax Length: 100",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "v1.simpleMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Сообщение\nexample: success",
                    "type": "string"
                }
            }
        },
        "v1.updatePersonInput": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "age": {
                    "description": "Age новый возраст (необязательно)\nMinimum: 0\nExample: 30",
                    "type": "integer",
                    "minimum": 0
                },
                "gender": {
                    "description": "Gender новый пол (необязательно)\nExample: female",
                    "type": "string"
                },
                "id": {
                    "description": "ID идентификатор Person (UUID)\nRequired: true\nExample: 3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "type": "string"
                },
                "name": {
                    "description": "Name новое имя (необязательно)\nMin Length: 2\nMax Length: 100",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "nationality": {
                    "description": "Nationality новый код страны (необязательно)\nExample: US",
                    "type": "string"
                },
                "patronymic": {
                    "description": "Patronymic новое отчество (необязательно)\nMin Length: 2\nMax Length: 100",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "surname": {
                    "description": "Surname новая фамилия (необязательно)\nMin Length: 2\nMax Length: 100",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        }
    }
}